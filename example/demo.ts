import { Solver, InputData, OutputData } from './src/generated_api';

// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ API
console.log('üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ TypeScript API –¥–ª—è C++ addon');

// –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –ø–æ–ª–Ω–æ–π —Ç–∏–ø–∏–∑–∞—Ü–∏–µ–π
const input: InputData = {
  name: 'Alice',
  value: 7,
  numbers: [1, 2, 3, 4, 5]
};

console.log('\nüì§ –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:');
console.log(JSON.stringify(input, null, 2));

// –í—ã–∑—ã–≤–∞–µ–º C++ —Ñ—É–Ω–∫—Ü–∏—é —á–µ—Ä–µ–∑ —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω—ã–π wrapper
// –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —á–∏—Å—Ç—ã–π TypeScript API: Solver.process()
// –í–Ω—É—Ç—Ä–∏ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–æ–¥–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤—ã–∑–æ–≤ addon.Solver_process()
try {
  const result: OutputData = Solver.process(input);
  
  console.log('\nüì§ –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏:');
  console.log(JSON.stringify(result, null, 2));
  
  console.log('\n‚úÖ –£—Å–ø–µ—à–Ω–æ! API —Å–∫—Ä—ã–≤–∞–µ—Ç –¥–µ—Ç–∞–ª–∏ –≤—ã–∑–æ–≤–∞ addon –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å.');
} catch (error: any) {
  console.log('\n‚ö†Ô∏è  Addon –µ—â–µ –Ω–µ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω. –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞:');
  console.log('1. –°–∫–æ–º–ø–∏–ª–∏—Ä—É–π—Ç–µ C++ –∫–æ–¥: npm run build');
  console.log('2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: node demo.js');
  console.log('\n–û—à–∏–±–∫–∞:', error.message);
}

// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
console.log('\nüîí –¢–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –æ–±–µ—Å–ø–µ—á–µ–Ω–∞:');
console.log('- input.name –∏–º–µ–µ—Ç —Ç–∏–ø string');
console.log('- input.value –∏–º–µ–µ—Ç —Ç–∏–ø number');  
console.log('- input.numbers –∏–º–µ–µ—Ç —Ç–∏–ø number[]');
console.log('- Solver.process() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç OutputData');
console.log('- –í—ã–∑–æ–≤ addon —Å–∫—Ä—ã—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
