name: Cross-Platform Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-lib:
    name: Test Library
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build library
        run: npm run build
      
      - name: Run library tests
        run: npm test

  test-example:
    name: Test Example on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: ['18', '20']

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Setup Python (Windows)
        if: runner.os == 'Windows'
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Setup MSVC (Windows)
        if: runner.os == 'Windows'
        uses: microsoft/setup-msbuild@v1.3
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build library
        run: npm run build
      
      - name: Test example project
        working-directory: ./example
        run: |
          npm install
          npm run build
          npm test

  prebuilds:
    name: Build Prebuilds
    needs: [test-lib, test-example]
    if: github.ref == 'refs/heads/main'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Setup Python (Windows)
        if: runner.os == 'Windows'
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Setup MSVC (Windows)
        if: runner.os == 'Windows'
        uses: microsoft/setup-msbuild@v1.3
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build library
        run: npm run build
      
      - name: Test example with prebuilds
        working-directory: ./example
        run: |
          npm install
          npm run build
          npm test
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}
          path: |
            example/build/Release/*.node
            example/dist/